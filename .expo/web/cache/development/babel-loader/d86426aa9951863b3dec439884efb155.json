{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { getAuth, signInWithEmailAndPassword, updateProfile, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { firebaseConfig } from \"./firebase-config\";\nimport { WeekContext } from \"./context/weekContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _React$useContext = React.useContext(WeekContext),\n    setUser = _React$useContext.setUser;\n  var navigation = useNavigation();\n  var app = initializeApp(firebaseConfig);\n  var auth = getAuth(app);\n  var handleSignIn = function handleSignIn() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      setUser(user);\n      navigation.navigate(\"Index\", {\n        user: user\n      });\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      Alert.alert(errorMessage);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.img,\n      source: require(\"../assets/logo.jpg\")\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(TextInput, {\n      style: styles.TextInput,\n      placeholder: \"Email\",\n      placeholderTextColor: \"white\",\n      onChangeText: function onChangeText(email) {\n        return setEmail(email);\n      }\n    }), _jsx(TextInput, {\n      style: styles.TextInput,\n      placeholder: \"Password\",\n      placeholderTextColor: \"white\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(password) {\n        return setPassword(password);\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: handleSignIn,\n      style: styles.loginBtn,\n      children: _jsx(Text, {\n        style: styles.loginBtnText,\n        children: \"LOG IN\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputView: {\n    backgroundColor: \"#e0103b\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    color: \"white\",\n    borderColor: \"white\",\n    borderRadius: 10,\n    width: \"80%\",\n    padding: 10\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#e0103b\"\n  },\n  loginBtnText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  img: {\n    width: 300,\n    height: 75,\n    marginBottom: 20\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useNavigation","getAuth","signInWithEmailAndPassword","updateProfile","createUserWithEmailAndPassword","initializeApp","firebaseConfig","WeekContext","Login","email","setEmail","password","setPassword","useContext","setUser","navigation","app","auth","handleSignIn","then","userCredential","user","navigate","catch","error","errorCode","code","errorMessage","message","Alert","alert","styles","container","img","require","TextInput","loginBtn","loginBtnText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","inputView","borderRadius","width","height","marginBottom","margin","borderWidth","color","borderColor","padding","marginTop","fontSize","fontWeight"],"sources":["/Users/mateoandraca/Desktop/UrbanBot/src/Login.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {StyleSheet, Text, View, TextInput, TouchableOpacity, Alert,Image} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport {getAuth, signInWithEmailAndPassword, updateProfile,createUserWithEmailAndPassword} from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { firebaseConfig } from \"./firebase-config\";\nimport { WeekContext} from \"./context/weekContext\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {setUser} = React.useContext(WeekContext);\n\n  const navigation = useNavigation();\n  const app = initializeApp(firebaseConfig);\n  const auth = getAuth(app);\n\n  const handleSignIn = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        setUser(user);\n        navigation.navigate(\"Index\",{user});\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        Alert.alert(errorMessage);\n      });\n  };\n  return (\n    <View style={styles.container}>\n      <Image style={styles.img} source={require('../assets/logo.jpg')} />\n      <StatusBar style=\"auto\" />\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Email\"\n          placeholderTextColor=\"white\"\n          onChangeText={(email) => setEmail(email)}\n        />\n\n\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Password\"\n          placeholderTextColor=\"white\"\n          secureTextEntry={true}\n          onChangeText={(password) => setPassword(password)}\n        />\n\n      <TouchableOpacity onPress={handleSignIn} style={styles.loginBtn}>\n        <Text style={styles.loginBtnText}>LOG IN</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputView: {\n    backgroundColor: \"#e0103b\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\",\n  },\n  TextInput: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    color: \"white\",\n    borderColor: \"white\",\n    borderRadius: 10,\n    width: \"80%\",\n    padding: 10,\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#e0103b\",\n  },\n  loginBtnText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  img: {\n    width: 300,\n    height: 75,\n    marginBottom: 20,\n  }\n});\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAAQC,OAAO,EAAEC,0BAA0B,EAAEC,aAAa,EAACC,8BAA8B,QAAO,eAAe;AAC/G,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,cAAc;AACvB,SAASC,WAAW;AAA+B;AAAA;AAEnD,eAAe,SAASC,KAAK,GAAG;EAC9B,gBAA0BT,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BU,KAAK;IAAEC,QAAQ;EACtB,iBAAgCX,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCY,QAAQ;IAAEC,WAAW;EAC5B,wBAAkBd,KAAK,CAACe,UAAU,CAACN,WAAW,CAAC;IAAxCO,OAAO,qBAAPA,OAAO;EAEd,IAAMC,UAAU,GAAGf,aAAa,EAAE;EAClC,IAAMgB,GAAG,GAAGX,aAAa,CAACC,cAAc,CAAC;EACzC,IAAMW,IAAI,GAAGhB,OAAO,CAACe,GAAG,CAAC;EAEzB,IAAME,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzBhB,0BAA0B,CAACe,IAAI,EAAER,KAAK,EAAEE,QAAQ,CAAC,CAC9CQ,IAAI,CAAC,UAACC,cAAc,EAAK;MACxB,IAAMC,IAAI,GAAGD,cAAc,CAACC,IAAI;MAChCP,OAAO,CAACO,IAAI,CAAC;MACbN,UAAU,CAACO,QAAQ,CAAC,OAAO,EAAC;QAACD,IAAI,EAAJA;MAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CACDE,KAAK,CAAC,UAACC,KAAK,EAAK;MAChB,IAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,IAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;MAClCC,KAAK,CAACC,KAAK,CAACH,YAAY,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EACD,OACE,MAAC,IAAI;IAAC,KAAK,EAAEI,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,KAAK;MAAC,KAAK,EAAED,MAAM,CAACE,GAAI;MAAC,MAAM,EAAEC,OAAO;IAAuB,EAAG,EACnE,KAAC,SAAS;MAAC,KAAK,EAAC;IAAM,EAAG,EACxB,KAAC,SAAS;MACR,KAAK,EAAEH,MAAM,CAACI,SAAU;MACxB,WAAW,EAAC,OAAO;MACnB,oBAAoB,EAAC,OAAO;MAC5B,YAAY,EAAE,sBAAC1B,KAAK;QAAA,OAAKC,QAAQ,CAACD,KAAK,CAAC;MAAA;IAAC,EACzC,EAGF,KAAC,SAAS;MACR,KAAK,EAAEsB,MAAM,CAACI,SAAU;MACxB,WAAW,EAAC,UAAU;MACtB,oBAAoB,EAAC,OAAO;MAC5B,eAAe,EAAE,IAAK;MACtB,YAAY,EAAE,sBAACxB,QAAQ;QAAA,OAAKC,WAAW,CAACD,QAAQ,CAAC;MAAA;IAAC,EAClD,EAEJ,KAAC,gBAAgB;MAAC,OAAO,EAAEO,YAAa;MAAC,KAAK,EAAEa,MAAM,CAACK,QAAS;MAAA,UAC9D,KAAC,IAAI;QAAC,KAAK,EAAEL,MAAM,CAACM,YAAa;QAAA;MAAA;IAAc,EAC9B;EAAA,EACd;AAEX;AAEA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,OAAO;IACxBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDC,SAAS,EAAE;IACTH,eAAe,EAAE,SAAS;IAC1BI,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBN,UAAU,EAAE;EACd,CAAC;EACDP,SAAS,EAAE;IACTY,MAAM,EAAE,EAAE;IACVE,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE,OAAO;IACpBP,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,KAAK;IACZO,OAAO,EAAE;EACX,CAAC;EACDjB,QAAQ,EAAE;IACRU,KAAK,EAAE,KAAK;IACZD,YAAY,EAAE,EAAE;IAChBE,MAAM,EAAE,EAAE;IACVL,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBW,SAAS,EAAE,EAAE;IACbb,eAAe,EAAE;EACnB,CAAC;EACDJ,YAAY,EAAE;IACZkB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBL,KAAK,EAAE;EACT,CAAC;EACDlB,GAAG,EAAE;IACHa,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}